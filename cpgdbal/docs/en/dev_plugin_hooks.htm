<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
<head>
<title>Plugin Hooks - Coppermine Photo Gallery - Documentation &amp; Manual</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="language"    content="en">
<meta name="copyright"   content="Coppermine dev team">
<meta name="description" content="list of plugin hooks">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta name="MSSmartTagsPreventParsing" content="true">
<meta http-equiv="imagetoolbar" content="no">
<!--
  SVN version info:

  Coppermine version: 1.5.0
  $Revision: 4964 $
  $LastChangedBy: abbas-ali $
  $Date: 2008-08-30 11:34:15 +0530 (Sat, 30 Aug 2008) $
-->
<link rel="stylesheet" type="text/css" href="../style.css" media="all" />
<link rel="stylesheet" type="text/css" href="../screen.css" media="screen" />
<link rel="stylesheet" type="text/css" href="../print.css" media="print" />
<link rel="shortcut icon" href="../favicon.ico" />
<script src="script.js" type="text/javascript"></script>
</head>
<body>
<script type="text/javascript">
  cpgDocHeader();
</script>
<div id="toc">
<script type="text/javascript">
  cpgDocToc();
</script>
<noscript>
<a href="toc.htm">Table of Contents</a>
</noscript>
</div>


<a name="plugin_hooks"></a><h1>Plugin Hooks<a href="#plugin_hooks" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h1>
<p>This is just a list of the different existing plugin hooks supported in version 1.5.x of Coppermine. The following list is designed to aid in the creation of plugins by listing the hooks based on their different uses and properties. This list does not explain how to use each hook but simply lists them so that they can be identified, further researched, and implemented.</p>

<a name="plugin_hooks_target_audience"></a><h2>Target audience<a href="#plugin_hooks_target_audience" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>This part of the documentation is not meant for end users of Coppermine, but only for developers and skilled users who are familar with coding. There is no support for this section, it comes as-is.</p>

<a name="plugin_hooks_choosing"></a><h2>Choosing Plugin Hooks<a href="#plugin_hooks_choosing" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>In order for your plugin to do anything in Coppermine, you need to register your plugin with the Coppermine plugin API and in so doing, tell Coppermine which hooks you will use to add or modify features of Coppermine.  A plugin hook is a place in a Coppermine script where Coppermine pauses what it is doing and checks to see if any plugins need to be called before Coppermine can continue.  Some hooks are unique and only occur one place in the Coppermine core code.  Others occur in multiple places.  Once a hook is reached, Coppermine checks to see if a plugin has registered to use that hook.  If so, Coppermine calls the plugin, lets the plugin execute its code and return, then Coppermine will continue where it left off.  Some plugin hooks pass data along to the plugin; others do not.</p>
<p>So, in designing your plugin, you need to determine which plugin hook or hooks to use.  If you plugin adds text or images to a certain page (like displayimage.php), then look for the plugin hooks on that page (using the table below or by searching the script).  Decide which hook occurs at the place you want in Coppermine's order of execution and which hook provides the information you need.  In many cases, it's more important to choose the place in the code, and if the hook doesn't provide the data you need, you can pull in that data from Coppermine global variables, configuration settings, or from the database tables themselves.  In some cases, you may need to add your own database tables to store information that Coppermine does not keep or that only your plugin needs.  There are examples of many of these cases in the core plugins and in the contributed plugins.</p>
<p>Included as a Coppermine core plugin is the plugin 'visiblehookpoints'.  This plugin places markers on pages and is a useful tool for determining where plugin hooks are called with respect to the HTML displayed by Coppermine.  Read the documentation for this plugin for more information.</p>
<p><a class="back" href="#top">Back to top</a></p><hr />

<a name="plugin_hooks_finding"></a><h2>Finding Plugin Hooks<a href="#plugin_hooks_finding" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>There are sections below that list the plugin hooks by script and alphabetically.  All plugin hooks should be listed in those 2 sections.  However, you can also search for hooks by searching for the text 'CPGPluginAPI' (in all scripts).  Action hook calls start with 'CPGPluginAPI::action' and filter hook calls start with 'CPGPluginAPI::filter'.  If you are looking for a particular page or place on a page to add text or images, you can look in the script and see where the closest plugin hook is located.  In some cases, you may find there is not a convenient hook available.  In that case, you can use the 'page_html' filter hook which is called just before the page is output to the web browser.  This is not ideal in some cases because the output HTML may change depending upon the theme or other plugin calls (before or after your plugin is called).  In some cases, it may be better to replace a Coppermine page entirely by using this call, either to deny access to a particular page (based upon permissions your plugin sets up) or using a new page your plugin provides.  Usually this is best for administration or configuration pages since pages your users see will use a particular theme and it can be tedious to write whole pages that are theme-compatible.  For user pages, you should try to use a specific plugin hook besides 'page_html'.</p>
<p>See also the core plugin 'visiblehookpoints' for assistance in associating plugin hooks with Coppermine's output to the web browser.</p>
<p><a class="back" href="#top">Back to top</a></p><hr />

<a name="plugin_hooks_using"></a>
<h2>Using Plugin Hooks<a href="#plugin_hooks_using" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>Placeholder.  Content will be added here.</p>
<p><a class="back" href="#top">Back to top</a></p><hr />

<a name="plugin_hooks_filename"></a>
<h2>Plugin Hooks by File Name<a href="#plugin_hooks_filename" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>In this section you will find a list of plugin hooks, sorted by script filenames in which the hook is called.</p>

<table border="0" cellspacing="0" cellpadding="0" class="maintable">
  <tr>
    <th valign="top" align="left" class="tableh1">File</td>
    <th valign="top" align="left" class="tableh1">Hook name</td>
    <th valign="top" align="left" class="tableh1">Hook type</td>
    <th valign="top" align="left" class="tableh1">Explanation</td>
    <th valign="top" align="left" class="tableh1">Sample</td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">index.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_anycontent"></a><strong>anycontent</strong><a href="#plugin_hooks_filename_anycontent" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">anycontent (anycontent page + plugin accessible content)</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$anycontent = CPGPluginAPI::filter('anycontent',ob_get_contents());</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">index.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_user_caption_params"></a><strong>user_caption_params</strong><a href="#plugin_hooks_filename_user_caption_params" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb"></td>
    <td valign="top" class="tableb"><pre class="smallcode">$params = CPGPluginAPI::filter('user_caption_params', 
                               array('{USER_NAME}' => $user['user_name'],
                                     '{USER_ID}' => $user['user_id'],
                                     '{ALBUMS}' => $albums_txt,
                                     '{PICTURES}' => $pictures_txt,
                               )
          );</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">index.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_plugin_block"></a><strong>plugin_block</strong><a href="#plugin_hooks_filename_plugin_block" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">filters main page blocks</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$matches = CPGPluginAPI::filter('plugin_block', $matches);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">delete.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_before_delete_file"></a><strong>before_delete_file</strong><a href="#plugin_hooks_filename_before_delete_file" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">Plugin filter to be called before deleting a file</td>
    <td valign="top" class="tableb"><pre class="smallcode">CPGPluginAPI::filter('before_delete_file', $pic);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">delete.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_after_delete_file"></a><strong>after_delete_file</strong><a href="#plugin_hooks_filename_after_delete_file" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">Plugin filter to be called after a file is deleted</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">CPGPluginAPI::filter('after_delete_file', $pic);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">displayimage.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_file_info"></a><strong>file_info</strong><a href="#plugin_hooks_filename_file_info" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">filters file information array</td>
    <td valign="top" class="tableb"><pre class="smallcode">$info = CPGPluginAPI::filter('file_info',$info);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">displayimage.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_post_breadcrumb"></a><strong>post_breadcrumb</strong><a href="#plugin_hooks_filename_post_breadcrumb" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">only on thumbnails.php and displayimage.php</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">CPGPluginAPI::filter('post_breadcrumb',null);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">editpics.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_editpics_before_delete_file"></a><strong>before_delete_file</strong><a href="#plugin_hooks_editpics_before_delete_file" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">Plugin filter to be called before deleting a file</td>
    <td valign="top" class="tableb"><pre class="smallcode">CPGPluginAPI::filter('before_delete_file', $pic);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">editpics.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_editpics_after_delete_file"></a><strong>after_delete_file</strong><a href="#plugin_hooks_editpics_after_delete_file" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">Plugin filter to be called after a file is deleted</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">CPGPluginAPI::filter('after_delete_file', $pic);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">thumbnails.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_post_breadcrumb"></a><strong>post_breadcrumb</strong><a href="#plugin_hooks_filename_post_breadcrumb" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">only on thumbnails.php and displayimage.php</td>
    <td valign="top" class="tableb"><pre class="smallcode">CPGPluginAPI::filter('post_breadcrumb',null);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_gallery_header"></a><strong>gallery_header</strong><a href="#plugin_hooks_filename_gallery_header" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">shows just above the gallery, defined by {GALLERY} in template.html</td>
    <td valign="top" class="tableb tableb_alternate"></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_gallery_footer"></a><strong>gallery_footer</strong><a href="#plugin_hooks_filename_gallery_footer" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">shows just below the gallery, defined by {GALLERY} in template.html</td>
    <td valign="top" class="tableb"><pre class="smallcode">$template_footer = CPGPluginAPI::filter('gallery_footer','').substr($template, $gallery_pos);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_thumb_data"></a><strong>thumb_data</strong><a href="#plugin_hooks_filename_thumb_data" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">filters $pic_row when get_pic_url is called... usually this is called before any html output is created so you can use this to change a lot of data</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$pic_row = CPGPluginAPI::filter('thumb_data',$pic_row);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_template_html"></a><strong>template_html</strong><a href="#plugin_hooks_filename_template_html" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">filters the template html</td>
    <td valign="top" class="tableb"><pre class="smallcode">$template = CPGPluginAPI::filter('template_html',$template);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_page_meta"></a><strong>page_meta</strong><a href="#plugin_hooks_filename_page_meta" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">filters header meta data for {META}</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$template_header = str_replace('{META}', '{META}'.CPGPluginAPI::filter('page_meta',''), $template_header);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_thumb_caption"></a><strong>thumb_caption</strong><a href="#plugin_hooks_filename_thumb_caption" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executed before the more specific "thumb_caption_*" plugins</td>
    <td valign="top" class="tableb"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_thumb_caption_regular"></a><strong>thumb_caption_regular</strong><a href="#plugin_hooks_filename_thumb_caption_regular" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_regular',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_thumb_caption_lastcom"></a><strong>thumb_caption_lastcom</strong><a href="#plugin_hooks_filename_thumb_caption_lastcom" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_lastcom',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_thumb_caption_lastcomby"></a><strong>thumb_caption_lastcomby</strong><a href="#plugin_hooks_filename_thumb_caption_lastcomby" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_lastcomby',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_thumb_caption_lastup"></a><strong>thumb_caption_lastup</strong><a href="#plugin_hooks_filename_thumb_caption_lastup" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_lastup',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_thumb_caption_lastupby"></a><strong>thumb_caption_lastupby</strong><a href="#plugin_hooks_filename_thumb_caption_lastupby" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_lastupby',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_thumb_caption_topn"></a><strong>thumb_caption_topn</strong><a href="#plugin_hooks_filename_thumb_caption_topn" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_topn',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_thumb_caption_toprated"></a><strong>thumb_caption_toprated</strong><a href="#plugin_hooks_filename_thumb_caption_toprated" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_toprated',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_thumb_caption_lasthits"></a><strong>thumb_caption_lasthits</strong><a href="#plugin_hooks_filename_thumb_caption_lasthits" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_lasthits',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_thumb_caption_random"></a><strong>thumb_caption_random</strong><a href="#plugin_hooks_filename_thumb_caption_random" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_random',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_thumb_caption_search"></a><strong>thumb_caption_search</strong><a href="#plugin_hooks_filename_thumb_caption_search" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_search',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/functions.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_thumb_caption_lastalb"></a><strong>thumb_caption_lastalb</strong><a href="#plugin_hooks_filename_thumb_caption_lastalb" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_lastalb',$rowset);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/functions.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_thumb_caption_favpics"></a><strong>thumb_caption_favpics</strong><a href="#plugin_hooks_filename_thumb_caption_favpics" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executed after the more general "thumb_caption" plugin</td>
    <td valign="top" class="tableb"><pre class="smallcode">$rowset = CPGPluginAPI::filter('thumb_caption_favpics',$rowset);</pre></td>
  </tr>  
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/themes.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_file_data"></a><strong>file_data</strong><a href="#plugin_hooks_filename_file_data" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">filters $pic_row when get_pic_url is called... usually this is called before any html is created so you can use this to change a lot of data</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$CURRENT_PIC_DATA = CPGPluginAPI::filter('file_data',$CURRENT_PIC_DATA);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">usermgr.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_usermgr_header"></a><strong>usermgr_header</strong><a href="#plugin_hooks_filename_usermgr_header" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb"></td>
    <td valign="top" class="tableb"><pre class="smallcode">echo CPGPluginAPI::filter('usermgr_header','');</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">usermgr.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_usermgr_footer"></a><strong>usermgr_footer</strong><a href="#plugin_hooks_filename_usermgr_footer" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate"></td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">echo CPGPluginAPI::filter('usermgr_footer','');</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">pluginmgr.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_plugin_configure"></a><strong>plugin_configure</strong><a href="#plugin_hooks_filename_plugin_configure" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Action</td>
    <td valign="top" class="tableb">executes when plugin_install returns an integer; returns bool/integer</td>
    <td valign="top" class="tableb"><pre class="smallcode">CPGPluginAPI::action('plugin_configure',$installed,CPG_EXEC_NEW);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">pluginmgr.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_plugin_cleanup"></a><strong>plugin_cleanup</strong><a href="#plugin_hooks_filename_plugin_cleanup" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Action</td>
    <td valign="top" class="tableb tableb_alternate">executes when plugin_uninstall returns an integer; returns bool/integer</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">CPGPluginAPI::action('plugin_cleanup',$uninstalled,$plugin_id);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/plugin_api.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_page_html"></a><strong>page_html</strong><a href="#plugin_hooks_filename_page_html" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">filters the final output html</td>
    <td valign="top" class="tableb"><pre class="smallcode">function& cpg_filter_page_html( &$html ) {
    return CPGPluginAPI::filter('page_html',$html);
}</pre><br />from include/init.inc.php<br /><pre class="smallcode">// Start output buffering
ob_start('cpg_filter_page_html');</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/plugin_api.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_page_end"></a><strong>page_end</strong><a href="#plugin_hooks_filename_page_end" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">executes when the script has output the page to the browser</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">register_shutdown_function('cpg_action_page_end');</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/plugin_api.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_plugin_install"></a><strong>plugin_install</strong><a href="#plugin_hooks_filename_plugin_install" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">executes when the plugin is installed returns true/false/integer</td>
    <td valign="top" class="tableb"><pre class="smallcode">$installed = CPGPluginAPI::action('plugin_install',true,CPG_EXEC_NEW);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/plugin_api.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_plugin_wakeup"></a><strong>plugin_wakeup</strong><a href="#plugin_hooks_filename_plugin_wakeup" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">when initialized </td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">if (!($thisplugin->awake = CPGPluginAPI::action('plugin_wakeup',true)))</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/plugin_api.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_plugin_sleep"></a><strong>plugin_sleep</strong><a href="#plugin_hooks_filename_plugin_sleep" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">when shutdown</td>
    <td valign="top" class="tableb"><pre class="smallcode">register_shutdown_function(array('CPGPluginAPI','sleep'));</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/init.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_page_start"></a><strong>page_start</strong><a href="#plugin_hooks_filename_page_start" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Action</td>
    <td valign="top" class="tableb tableb_alternate">add/modify/delete init settings before they get to the page</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">CPGPluginAPI::action('page_start',null);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb">include/picmgmt.inc.php</td>
    <td valign="top" class="tableb"><a name="plugin_hooks_filename_add_file_data"></a><strong>add_file_data</strong><a href="#plugin_hooks_filename_add_file_data" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb">Filter</td>
    <td valign="top" class="tableb">available in picmgmt.php, called right before a new image's data is written to the database</td>
    <td valign="top" class="tableb"><pre class="smallcode">$CURRENT_PIC_DATA = CPGPluginAPI::filter('add_file_data',$CURRENT_PIC_DATA);</pre></td>
  </tr>
  <tr>
    <td valign="top" class="tableb tableb_alternate">include/picmgmt.inc.php</td>
    <td valign="top" class="tableb tableb_alternate"><a name="plugin_hooks_filename_add_file_data_success"></a><strong>add_file_data_success</strong><a href="#plugin_hooks_filename_add_file_data_success" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></td>
    <td valign="top" class="tableb tableb_alternate">Filter</td>
    <td valign="top" class="tableb tableb_alternate">called right after a new file's data is written to the database. $CURRENT_PIC_DATA holds the pid of new file along with other data.</td>
    <td valign="top" class="tableb tableb_alternate"><pre class="smallcode">$CURRENT_PIC_DATA = CPGPluginAPI::filter('add_file_data_success',$CURRENT_PIC_DATA);</pre></td>
  </tr>
</table>

<a name="plugin_hooks_alphabetic"></a>
<h2>Plugin Hooks Alphabetically<a href="#plugin_hooks_alphabetic" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p><acronym title="to be continued">tbc</acronym> (the above table needs to be re-sorted - let's do that when we release)</p>

<a name="plugin_hooks_hooktype"></a>
<h2>Plugin Hooks by Hook Type<a href="#plugin_hooks_hooktype" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>There currently are two different types of plugin hooks: <strong>actions</strong> and <strong>filters</strong>:</p>

<a name="plugin_hooks_action"></a><h3>Action<a href="#plugin_hooks_action" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<p>The first type of hook is an action hook. Basically this allows for actions related to the plugin such as the following two hooks.</p>
<div class="quote">CPGPluginAPI::action('plugin_configure',$installed,CPG_EXEC_NEW);<br />
CPGPluginAPI::action('plugin_cleanup',$uninstalled,$plugin_id);</div>
<p>These next two hooks are useful for running code that does not require anything to be exported.  These hooks have access to the global variables and functions inside of Coppermine.  These hooks will most likely be used to execute code that does not require an output.</p>
<div class="quote">CPGPluginAPI::action('page_start',null)<br />
CPGPluginAPI::action('page_end',null);</div>



<a name="plugin_hooks_filter"></a><h3>Filter<a href="#plugin_hooks_filter" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<p>This group of plugin hooks is designed to manipulate data that will be used.  Normally this involves adding or removing data from the variable submitted to the filter.  This data can also be simply read from the variable.</p>
<p>This first group of filters are used in a variety of places and are each unique.</p>
<div class="quote">$info = CPGPluginAPI::filter('file_info',$info);<br />
$params = CPGPluginAPI::filter('user_caption_params', array('{USER_NAME}' => $user['user_name'],<br />
$matches = CPGPluginAPI::filter('plugin_block', $matches);<br />
$anycontent = CPGPluginAPI::filter('anycontent',ob_get_contents());<br />
$template = CPGPluginAPI::filter('template_html',$template);<br />
$template_header = str_replace('{META}','{META}'.CPGPluginAPI::filter('page_meta',''),$template_header);</div>
<p>This group of filters is very specific for manipulating the data of the thumbnails.  These are named according to what they modify and are extremely obvious.</p>
<div class="quote">$rowset = CPGPluginAPI::filter('thumb_caption',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_regular',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_lastcom',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_lastcomby',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_lastup',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_lastupby',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_topn',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_toprated',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_lasthits',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_random',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_search',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_lastalb',$rowset);<br />
$rowset = CPGPluginAPI::filter('thumb_caption_favpics',$rowset);<br />
$pic_row = CPGPluginAPI::filter('thumb_data',$pic_row);</div>
<p>These two filters are used specifically to manipulate the data of a picture.</p>
<div class="quote">$CURRENT_PIC_DATA = CPGPluginAPI::filter('add_file_data',$CURRENT_PIC_DATA);<br />
$CURRENT_PIC_DATA = CPGPluginAPI::filter('file_data',$CURRENT_PIC_DATA);</div>
<p>If you want to do something (like converting the video to flv, taking a backup of file to remote server etc..) after a file is uploaded then this hook can be used.</p>
<div class="quote">$CURRENT_PIC_DATA = CPGPluginAPI::filter('add_file_data_success',$CURRENT_PIC_DATA);</div>
<p>The breadcrumb plugin:</p>
<div class="quote">CPGPluginAPI::filter('post_breadcrumb',null);</div>
<p>This plugin is very powerful because it gives access to the entire body of HTML that will be then directly returned to the user.  This filter can be used to remove parts of code or modify links for example.</p>
<div class="quote">return CPGPluginAPI::filter('page_html',$html);</div>
<p>These two filters relate to headers.</p>
<div class="quote">echo CPGPluginAPI::filter('usermgr_header','');<br />
$template_header .= CPGPluginAPI::filter('gallery_header','');</div>
<p>These two filters relate to footers.</p>
<div class="quote">echo CPGPluginAPI::filter('usermgr_footer','');<br />
$template_footer = CPGPluginAPI::filter('gallery_footer','').substr($template, $gallery_pos);</div>
<p>These two filters are meant for cleanup purposes. If there is any additional data related to a file and you want that data to be removed when a file is deleted then use these hooks.</p>
<div class="quote">CPGPluginAPI::filter('before_delete_file', $pic);<br />
CPGPluginAPI::filter('after_delete_file', $pic);</div>



<script type="text/javascript">
  cpgDocFooter();
  dateRevision(' $LastChangedDate: 2008-08-30 11:34:15 +0530 (Sat, 30 Aug 2008) $ ', ' $Revision: 4964 $ ');
</script>

</body>
</html>