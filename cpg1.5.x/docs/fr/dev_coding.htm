<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
<head>
<title>Coding guidelines - Developer documentation - Coppermine Photo Gallery - Documentation &amp; Manuel</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="language" content="fr" />
<meta name="copyright" content="Coppermine dev team" />
<meta name="description" content="Cette partie de la documentation n'est pas faite pour l'utilisateur de base de Coppermine, mais uniquement pour les développeurs. Il n'y a pas d'aide pour cette section.">
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta name="MSSmartTagsPreventParsing" content="true" />
<meta http-equiv="imagetoolbar" content="no" />
<!--
  SVN version info:

  Coppermine version: 1.5.3
  $HeadURL$
  $Revision$
  $LastChangedBy$
  $Date$
-->
<link rel="stylesheet" type="text/css" href="../style/style.css" media="all" />
<link rel="stylesheet" type="text/css" href="../style/screen.css" media="screen" />
<link rel="stylesheet" type="text/css" href="../style/print.css" media="print" />
<link rel="shortcut icon" href="../favicon.ico" />
<script src="../js/jquery.js" type="text/javascript"></script>
<script src="../js/jquery.treeview.js" type="text/javascript"></script>
<script src="script.js" type="text/javascript"></script>
</head>
<body>
<h1 id="docheader">Coppermine Photo Gallery v1.5.x: Documentation and Manual</h1>
<div id="toc">
<a href="toc.htm">Table of Contents</a>
</div>

<a name="dev_coding"></a><h1>Règles de travail pour le codage<a href="#dev_coding" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h1>

<a name="dev_coding_target_audience"></a><h2>Public ciblé<a href="#dev_coding_target_audience" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>Cette partie de la documentation n'est pas à destination des utilisateurs de Coppermine, mais uniquement pour les développeurs. Il n'y a pas d'aide pour ces chapitres, ils sont livrés tels quels.</p>

<a name="dev_coding_scope"></a><h2>Objet<a href="#dev_coding_scope" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>Comme Coppermine est un tavail d'aquipe, les membres de l'équipe qui contribuent doivent s'assurer que le code reste facile à lire, à comprendre et à maintenir. C'est pourquoi il y a ici un certain nombre de règles qu'il faut réspecter lorsque l'on travaille sur le code source de Coppermine. Bien que cette partie de la documentation aux membres de l'éaquipe de développement de Coppermine, les utilisateurs qui souhaitent contribuer avec leur code de quelque manière que ce soit sont priés de répecter ces règles autant que possible (si vous les comprenez totalement).</p>
<p>Les règles de codage de cette page ne sont pas gravées dans le marbre - si vous (en tant que membre de l'équipe de développement) trouvez pendant le développement qu'une de ces règles doit être révisée ou changée, démarez un sujet sur le forum de discussion dédié au développement (dev board) pour en discuter.</p>

<hr />

<a name="dev_coding_indentation"></a><h2>Indentation<a href="#dev_coding_indentation" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<ul>
    <li>Utilisez une indentation de 4 espaces sans tabulations. La plupart des éditeurs peuvent être configurés pour cela.</li>
    <li>N'hésitez pas à laisser des lignes vides entre les "sections logiques" du code, mais n'en utilisez pas de trop, l'ensemble deviendrait trop espacé</li>
</ul>

<hr />

<a name="dev_coding_general"></a><h2>règles générales<a href="#dev_coding_general" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<ul>
    <li>Dans les requêtes ou dans le code, mettez toujours un espace avante et après un opérateur</li>
</ul>

<hr />

<a name="dev_coding_php"></a><h2>Code PHP<a href="#dev_coding_php" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>

<a name="dev_coding_formatting"></a><h3>Formatage<a href="#dev_coding_formatting" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>

<ul>
    <li>Le signe égal doit être aligné avec les éléments environnants<br />
    <div class="quote">
        Mauvais exemple:
        <pre class="code">
$pic_title = 'My picture';
$album = 'lastup';
$update_time = true;
        </pre>
        Bon Exemple:
        <pre class="code">
$pic_title   = 'My picture';
$album       = 'lastup';
$update_time = true;
        </pre>
    </div>
    </li>
    <li>Les tableaux à valeurs multiples ne doivent pas être déclarés sur une seule ligne. Ils ne peuvent être déclarés sur une seule ligne que si ils ne contiennent qu'une seule valeu</li>
    <li>Toujours mettre une virgule après la dernière valeur dans la déclaration d'un tableau (array)</li>
    <li>Toujours aligner les doubles flêches d'un tableau sur une ligne, et il doit y avoir un espace simple après la flèche (avant la valeur)</li>
    <li>Chaque ligne dans la déclaration 'un tableau doit se terminer par une virgule<br />
    <div class="quote">
        Mauvais exemples:
        <pre class="code">
$foo = array('one', 'two', 'three');

$bar = array(
'one' => 1, 'two' => 3,
'three' => 3
);

$multi = array('first' => 'one', 'second' => array('2'), 'third' => array('foo' => 'bar', 'hello' => 'world'));
        </pre>
        Bons Exemples:
        <pre class="code">
$foo = array(
        'one',
        'two',
        'three',
       );

$bar = array(
        'one'   => 1,
        'two'   => 2,
        'three' => 3,
       );
       
$multi = array(
          'first'  => 'one',
          'second' => array('2'), // Since it is just one value in array, it can be declared in same line
          'third'  => array(
                       'foo'   => 'bar',
                       'hello' => 'world',
                      )
         );
        </pre>
    </div>
    </li>
</ul>

<a name="dev_coding_control_structures"></a><h3>Structures de Controle<a href="#dev_coding_control_structures" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<p>cela inclue <tt class="code">if</tt>, <tt class="code">for</tt>, <tt class="code">while</tt>, <tt class="code">switch</tt>.</p>
<ul>
    <li>Les éléments de Controle doivent avoi un espace entre le mot clé de controle et l'ouverture de la parenthèse, pour les distinguer des appels de fonctions</li>
    <li>Toujours utiliser les accolades, même dans les cas ou elles sont techniquement optionnelles - cela augmente la lisibilité et diminue le risque d'erreur lors de l'ajout de lignes</li>
    <li>Toujours commencer une nouvelle ligne pour l'ouverture ou la fermeture des accolades<br />
    <div class="quote">Mauvais exemple:<pre class="code">if ($foo = 'bar') { echo 'Hello world'; }</pre>Mauvais exemple:<pre class="code">if ($foo = 'bar') 
{ echo 'Hello world'; }</pre>Bon exemple:<pre class="code">if ($foo = 'bar') { 
    echo 'Hello world'; 
}</pre>Bon exemple:<pre class="code">if ($foo = 'bar')
{ 
    echo 'Hello world'; 
}</pre></div></li>
</ul>

<a name="dev_coding_function_calls"></a><h3>Appels de Fonctions<a href="#dev_coding_function_calls" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<ul>
    <li>Les fonctions doivent être appelées sans espaces entre le nom de la fonction, l'ouverture de la parenthèse, et le premier paramètre, des espaces entre les virgules et chaques paramètres, et sans espace entre le dernier paramètre, la parenthèse de fin et le point-virgule.</li>
    <li>il doit y avoir un espace de chaque coté du signe égal utilisé pour assigner la valeur retournée par une fonction vers une variable. Dans le cas d'un bloc de tâches liées, plus d'espace doivent être insérés pour une plus grande lisibilité.</li>
</ul>

<a name="dev_coding_function_definitions"></a><h3>Définition des Fonctions<a href="#dev_coding_function_definitions" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<ul>
    <li>La définition des Fonctions suit le modèle d'indentation 1TBC:<pre class="code">&lt;?php
    
    
function fooFunction($arg1, $arg2 = '')
{
    if (condition) {
        statement;
    }
    return $val;
}


?&gt;</pre></li>
    <li>Les arguments avec une valeur par défaut doivent être en fin de liste des paramètres</li>
    <li>Il doit y avoir deux lignes vierges avant et après la déclaration de la fonctionT</li>
    <li>N'utilisez pas de fonctions qui n'existent pas dans PHP4.3 ou précédent (et n'utilisez pas non plus de focntions qui ont été enlevées par la suite!) a moins de les définir pour leurs versions.</li>
</ul>

<a name="dev_coding_php_tags"></a><h3>Balise de code PHP<a href="#dev_coding_php_tags" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<ul>
    <li>Utilisez toujours <tt class="code">&lt;?php ?&gt;</tt> pour délimiter le code PHP, pas la version abrégée <tt class="code">&lt;? ?&gt;</tt>, parce que la version longue fonctionne avec tous les paramétrages de serveur, alors que la version abrégée ne fonctionne pas partout.</li>
</ul>

<a name="dev_coding_html_nesting"></a><h3>Imbrication de HTML en PHP<a href="#dev_coding_html_nesting" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<p>Lorsqu'il y a plus d'une ligne de HTML à afficher, la <a href="http://de2.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc" rel="external" class="external">syntaxe Heredoc</a> doit être utilisée au lieu de suspendre le processus PHP pour le rependre ensuite.</p>
<p>Bon:</p>
<pre class="code">// Contenu Php ici
if ($foo == $bar) {
	print &lt;&lt;&lt; EOT
	&lt;h1&gt;Hello {$bla}&lt;/h1&gt;
EOT;
}</pre>
<p>Mauvais:</p>
<pre class="code">// Contenu Php ici
if ($foo == $bar) {
	?&gt;
	&lt;h1&gt;Hello &lt;?php echo $bla; ?&gt;&lt;/h1&gt;
&lt;?php
}</pre>

<a name="dev_coding_naming_conventions"></a><h3>Convention de Nommage<a href="#dev_coding_naming_conventions" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<ul>
    <li><strong>Les Fonctions</strong> elles doivent être nommées en minuscules et utiliser l'annotation avec soulignement ex: <tt class="code">function_name()</tt></li>
    <li><strong>Les Variables</strong> Suivez la même convention (minuscule et utilisation du caractère de soulignement), par contre les variables globales doivent être en MAJUSCULES (ex: <tt class="code">$CONFIG</tt>)</li>
    <li>Les Superglobales (e.x. $_GET ou $_POST) doivent être désinfectées en utilisant Inspekt - référez vous au chapitre &quot;<a href="dev_superglobals.htm#superglobals_sanitization">Désinfection des Superglobales en utilisant Inspekt</a>&quot;</li>
    <li><strong>Les Constantes</strong> doivent être définies en MAJUSCULES avec le caractère de soulignement comme séparateur de mots</li>
    <li><strong>Les Noms de Fichiers</strong> doivent suivre la même convention d'utilisation du caractère de soulignement mais doivent être entièrement en miniscules</li>
    <li>Comme toujours, les noms déscriptifs (pour les répertoires/fichiers/fonctions/variables/constantes) sont préférables au genre "$egYtesIopnfer". (sauf pour l'utilisation de compteurs, $i, etc.)</li>
</ul>

<hr />

<a name="dev_coding_database"></a><h2>Requêtes dans la base de donnée<a href="#dev_coding_database" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<ul>
    <li>Toujours libérer les ressources MySQL. (ainsi que les autres!)</li>
    <li>Dans les requêtes, toujours mettre en capitales les commandes : <tt class="code">SELECT</tt>, <tt class="code">INSERT</tt>, <tt class="code">REPLACE</tt>, <tt class="code">UPDATE</tt>, <tt class="code">DELETE</tt>, etc. doivent toutes être en capitales</li>
    <li>Dans les requêtes , mettre toujours en capitales <tt class="code">WHERE</tt>, <tt class="code">AND</tt>, <tt class="code">OR</tt>, <tt class="code">LIMIT</tt>, <tt class="code">FROM</tt>, <tt class="code">JOIN</tt>, <tt class="code">AS</tt>, <tt class="code">ON</tt>, etc.</li>
    <li>Ne pas utiliser de noms de champs qui sont aussi des mots clé de MySQL</li>
    <li>N'utilisez pas de fonctions Mysql qui ne sont pas utilisables avec MySQL 3.23.4 et précédent</li>
    <li>Optimisez toutes le requêtes pour MySQL 4, même si comme dit plus haut elles doivent fonctionner avec une version antérieure</li>
    <li>Gardez tous les id uniques, et essayez de garder le même id et nom lorsque les deux sont spécifés</li>
    <li>Utilisez <tt class="code">LIMIT</tt> pour les requêtes à chaque fois que c'est possible</li>
    <li><tt class="code">LEFT JOIN</tt> est plus lent que le simple <tt class="code">JOIN</tt> (ou les virgules) donc vous devez les éviter si possible</li>
    <li>Ce n'est pas <tt class="code">messages as m</tt>, mais <tt class="code">messages AS m</tt>, parce que <tt class="code">AS</tt> est un mot clé MYSQL</li>
    <li>Lorsque vous faites un <tt class="code">JOIN</tt>, la(les) table(s) reliées sont en premier dans la clause <tt class="code">ON</tt></li>
</ul>

<hr />

<a name="dev_coding_documentation"></a><h2>Documentation<a href="#dev_coding_documentation" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<ul>
    <li>Laissez la documentation correctement intégrée en haut des fichiers</li>
    <li>Laissez la documentation/les commentaires en tête de fichier avec une limite de 80 caractères</li>
    <li>Commencez chaque ligne avec une majuscule, et utilisez un grammaire correcte. (temps et le reste!)</li> 
    <li>Il y a un sous-chapitre de la documentation du développeur qui traite de <a href="dev_documentation.htm">modifier la documentation</a> - Merci d'en tenir compte</li>
    <li>Il y a des étapes particulières lors de <a href="dev_config.htm">l'ajout d'une option de configuration</a> - Merci de vous référer au chapitre correspondant de la documentation.
</ul>

<hr />

<a name="dev_coding_html_output"></a><h2>Sortie HTML<a href="#dev_coding_html_output" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<ul>
    <li>Toujours refermer les input, img, hr, et autres éléments qui ne peuvent rien contenir. (<tt class="code">&lt;tagname <strong>/</strong>&gt;</tt>)</li>
    <li>Coppermine est destiné à être conforme aux standards Web, Il faut donc toujours essayer de faire du code HTML et CSS valide. En particulier, les sorties vues par les visiteurs de la galerie (et par les robots des moteurs de recherche) doivent être totalement valides; les sorties uniquement vues par l'administrateur peuvent être moins strictes(Mais vous devez <em>essayer</em> de coder des sorties valides pour la partie administrateur malgré tout). Il y a une exeption à cette règle de validité aux standarts: si le code respectueux des standarts brise les fonctionnalités de base des navigateurs proncipaux comme l'actuelle implémentation des ojects embarqués qui ne sont pas respectueux des standards parceque IE5.x &quot; misbehaving&quot; in standards-compliant mode, it is acceptable to create output that doesn't validate. If this is the case, make sure to at least make others aware of this (<a href="known_issues.htm">known issues</a> section of the docs is the best place,  but at least add some comment to the code).</li>
</ul>

<a name="dev_coding_html_output_images"></a><h3>Balises Images dans les sorties HTML<a href="#dev_coding_html_output_images" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<ul>
    <li>Toujours mettre un attribut alt à tous les éléments images, même si le "alt" est vide</li>
    <li>N'utilisez pas le titre comme contenu du "alt", ne l'utilisez que si le titre est necessaire (comme pour les icones)</li>
</ul>

<a name="dev_coding_html_output_links"></a><h3>Liens dans les sorties HTML<a href="#dev_coding_html_output_dev_coding_html_output_links" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<ul>
    <li>N'utilisez pas l'attribut "target", il est invalide. Utilisez <tt class="code">&lt;a href="http://example.com/" rel="external" class="external"&gt;</tt> à la place. L'utilisateur final peut alors facilement utiliser JavaScript pour ouvrir le lien dans une nouvelle fenêtre si il le souhaite.</li>
</ul>

<a name="dev_coding_html_output_form"></a><h3>Eléments de formulaires dans les sorties HTML<a href="#dev_coding_html_output_form" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<ul>
    <li>
        Il est obligatoire d'utiliser des classes CSS particulières pour cetains éléments de formulaires:
        <ul>
            <li><tt class="code">&lt;input type="text" class="textinput" /&gt;</tt></li>
            <li><tt class="code">&lt;input type="submit" class="button" /&gt;</tt></li>
            <li><tt class="code">&lt;input type="radio" class="radio" /&gt;</tt></li>
            <li><tt class="code">&lt;input type="checkbox" class="checkbox" /&gt;</tt></li>
            <li><tt class="code">&lt;select class="listbox" /&gt;</tt></li>
        </ul>
    </li>
</ul>

<a name="dev_coding_html_output_deprecated"></a><h3>Deprecated tags<a href="#dev_coding_html_output_deprecated" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<p>Deprecated HTML tags like <tt class="code">&lt;font&gt;</tt> mustn't be introduced into Coppermine unless there is a valid, documented reason to do so.</p>

<a name="dev_coding_html_prefered_tags"></a><h3>Prefered tags<a href="#dev_coding_html_prefered_tags" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h3>
<p>The popular tags <tt class="code">&lt;b&gt;</tt> and <tt class="code">&lt;i&gt;</tt> are considered to be deprecated tags as well. Because of their popularity, browsers will probably support them for a long time. However, there are better alternatives. For <tt class="code">&lt;b&gt;</tt>, the replacement tag is <tt class="code">&lt;strong&gt;</tt>. For <tt class="code">&lt;i&gt;</tt>, the replacement tag is <tt class="code">&lt;em&gt;</tt>. If possible, the replacement tags should be used both in HTML output generated by Coppermine as well as the documentation.</p>

<hr />

<a name="dev_coding_credits"></a><h2>Credits pour le guide de codage<a href="#dev_coding_credits" title="Lien vers cette section"><img src="images/anchor.gif" width="15" height="9" border="0" alt="" /></a></h2>
<p>Les règles principales de cette page ont été esquissées par Dr. Tarique Sani comme un sous-ensemble de lignes directrices de codage PEAR. Les sorties HTML et la section concernant la base de donnée sont basées sur un sujet crée par Unknown W. Brackets de Simplemachines.</p>

<div id="doc_footer">
	<div class="doc_info_wrapper">
		<span id="doc_last_changed">$LastChangedDate$</span>
		<span id="doc_revision">$Revision$</span>
	</div>
</div>
</body>
</html>