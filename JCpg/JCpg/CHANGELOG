Found a bug in JCpgPictureAdder: when using apple + A (to select all) in a map with pictures, a java.lang.ArrayIndexOutOfBoundsException: -1 exception is generated form with Apple's own UI java code. Selecting the same files manually, will not throw this exception
Fixed a bug where JCpg wasn't always able to copy a local file to the JCpg local album
The usermanager's offline button is disabled when there is now local Coppermine configuration
The Coppermine configuration is now also saved to an XML file
Because of the complete XML transition, I removed all implementations of the Java Serialisable class
A category can have subcategories and albums
The main gallery can now also have albums
Found bug in Mac OS X Aqua UI classes when adding pictures
Fixed bug where it was possible there were no allowed files to select in the Picture Adder
ServerManager uses XML now
UserManager uses XML now
Complete XML transition: only XML is used to store the current gallery state in disk
Filled in username and pwd are now stored in file
Hardcoded username and pwd are now removed
Fixed bug where JCpg always added a _ after the user's prefix
Fixed a bug where the z order of windows were not ok
Partially ported JCpg to JVM 6.0
Fixed bug when saving the gallery to current.dat when deleting categories
Added a Confirm Manager class so users can confirm certain actions
Changed colors of UI
Added an Album Previewer using threads. Needs better memory usage
Simplified the code for making thumbnailes. Works always now
Images are previewed when selected in the Add Picture Manager
Added crop effect. Needs mouse listener
Made UI 100% resolution independent (only on mac)
Did small changes to UI: deleted 'My Albums' and 'Current Server' label
Made changes to the cell renderer -> grid bag
Now possible to add infinite number of pictures with add manager
Added an auto update feature
Added mega explorer view so there are now 2 possible views: 1 with tree and mega explorer with all photo's of the selected album, 1 with tree, list and preview pane
Added offline mode. A user can now start working online or offline. Offline will load the current state on the disk.
Adding synchronisation. While waiting for Nitin's API to do the job I created the syncing by using SQL queries and FTP
Added new effect: rotation. Still needs some improvements because the pictures are also moved when rotated
Did small UI change using a large JSplitpane for the tree and previewpane
Seperated SQL login manager into User Manager and Server Manager
Added basic photo editing tools like resize and edit colors
Added edit managers for categories, albums, pictures
Added a SQL login manager
Added simple UI containing a tree, a list and one big pane for picture previewing